# This file is to make it easier to test Ansible include files. Those cannot be directly run from Ansible, sinced they are not valid playbooks. To use it, just make sure the contents are the same as site.yml, but then change the list of roles to be applied (usually to just the one you want to debug).
#
# site.yml â€” the master Ansible playbook for Mason Linux
#
# This playbook is intended to be driven by mason_linux_deployer.rb, the script that
# provisions and/or deploys the app to remote servers.

- hosts: all
  vars:
    # Mason 2015-06-05: putting all vars here for now, and will figure out where they really belong later...

    sysadmin_username: centos
      # This variable may be overridden by mason_linux_deployer.rb using Ansible's --extra-vars command-line flag. Usually, this will be 'centos' (because that's how the standard AWS AMI we use as our base is set up, so we just follow their lead). This is the user that is allowed to SSH into the server, and has sudo powers.

    server_type: generic
      # These will also be overridden as needed by mason_linux_deployer.rb.

    sysadmin_homedir: /home/{{ sysadmin_username }}

    rails_app_name: rails_app

  roles:
#    - role: mason-linux-compatible
#    - role: mason-linux-core
#    - role: ruby
    - role: rails
    - role: firewall-allows-web-traffic
#    - { role: vmware-local-dev-server, when: server_type == 'vmware-fusion'}
    # - { role: secrets-production, when: False }
      # DIDNT WORK FOR ENCRYPTED SHIT BECAUSE ALWAYS LOADED, ANYHOW DESPITE CONDITION
